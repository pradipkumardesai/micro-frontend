{"version":3,"sources":["ng://wk-multiselect/lib/wk-multiselect.component.ts","ng://wk-multiselect/lib/wk-multiselect.pipe.ts","ng://wk-multiselect/lib/WindowRef.provider.ts","ng://wk-multiselect/lib/wk-multiselect.module.ts"],"names":["WkMultiselectComponent","config","EventEmitter","autoClose","prototype","selectAll","i","this","items","length","checked","selectedAll","checkIfAllSelected","every","item","changed","_this","count","map","selectedItems","emit","filter","x","Component","args","selector","template","styles","encapsulation","ViewEncapsulation","None","NgbDropdownConfig","Input","Output","HighlightPipe","transform","text","search","pattern","replace","split","t","join","regex","RegExp","match","Pipe","name","FilterPipe","field","value","re","it","toLowerCase","toLocaleLowerCase","indexOf","Object","defineProperty","WindowRef","_window","window","Injectable","WkMultiselectModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","FormsModule","NgbModule","declarations","exports"],"mappings":"ucAAA,IAAAA,EAAA,WA0ME,SAAAA,EAAYC,cAJgC,sBAElB,IAAIC,EAAAA,aAG5BD,EAAOE,WAAY,SAErBH,EAAAI,UAAAC,UAAA,WAEE,IAAK,IAAIC,EAAI,EAAGA,EAAIC,KAAKC,MAAMC,OAAQH,IACrCC,KAAKC,MAAMF,GAAGI,QAAUH,KAAKI,aAGjCX,EAAAI,UAAAQ,mBAAA,WAEEL,KAAKI,YAAcJ,KAAKC,MAAMK,MAAM,SAAUC,GAC5C,OAAwB,IAAjBA,EAAKJ,WAGhBV,EAAAI,UAAAW,QAAA,WAAA,IAAAC,EAAAT,KAWE,OATAA,KAAKU,MAAQ,EACbV,KAAKC,MAAMU,IAAI,SAAAJ,GACTA,EAAKJ,UACPM,EAAKC,MAAQD,EAAKC,MAAQ,KAK9BV,KAAKY,cAAcC,KAAKb,KAAKC,MAAMa,OAAO,SAAAC,GAAK,OAAc,IAAdA,EAAEZ,WAC1CH,KAAKU,2BA3NfM,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAU,guCAsBVC,OAAQ,CACN,47HA6JFC,cAAeC,EAAAA,kBAAkBC,kDA9L1BC,EAAAA,oDAqMNC,EAAAA,6BAEAC,EAAAA,YAxMH,GCAAC,EAAA,gCAIEA,EAAA9B,UAAA+B,UAAA,SAAUC,EAAcC,GAGtB,GAAIA,EAAQ,CACV,IAAIC,EAAUD,EAAOE,QAAQ,sCAAuC,QAGpED,EAAUA,EAAQE,MAAM,KAAKnB,OAAO,SAACoB,GACnC,OAAkB,EAAXA,EAAEhC,SACRiC,KAAK,KACR,IAAIC,EAAQ,IAAIC,OAAON,EAAS,MAEhC,OAAOD,EAASD,EAAKG,QAAQI,EAAO,SAACE,GAAU,MAAA,4BAA4BA,EAAK,aAAcT,EAEhG,OAAOA,uBAhBVU,EAAAA,KAAItB,KAAA,CAAC,CAAEuB,KAAM,kBAFd,qCA0BEC,EAAA5C,UAAA+B,UAAA,SAAU3B,EAAcyC,EAAeC,GAErC,GAAIA,EAAO,CAET,IAAK1C,EAAS,MAAO,GACrB,IAAI2C,EAAK,IAAIP,OAAOM,EAAO,MAE3B,OAAO1C,EAAMa,OAAO,SAAA+B,GAAM,OAAsH,EAAtHA,EAAGH,GAAOI,cAAcd,QAAQY,EAAI,SAAWD,EAAMI,oBAAsB,WAAWC,QAAQL,EAAMG,iBAEhI,OAAO7C,uBAbVsC,EAAAA,KAAItB,KAAA,CAAC,CACJuB,KAAM,4DCdLS,OAAAC,eAAIC,EAAAtD,UAAA,eAAY,KAAhB,WACG,OARN,SAAAuD,IAEG,OAAOC,OAMGD,wDAHZE,EAAAA,kBCPDC,EAAA,gCAiBgBA,EAAAC,mBACZ,MAAO,CACLC,SAAUF,EACVG,UAAW,CACTP,yBAbPQ,EAAAA,SAAQ1C,KAAA,CAAC,CACR2C,QAAS,CACPC,EAAAA,aAAcC,EAAAA,YAAaC,EAAAA,UAAUP,WAEvCQ,aAAc,CAACvE,EAAwBgD,EAAYd,GACnDsC,QAAS,CAACxE,SAbZ","sourcesContent":["import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\n\nexport interface WkMultiselectModel {\n  value: string;\n  name: string;\n  checked?: boolean;\n}\n\n@Component({\n  selector: 'wk-multiselect',\n  template: `\n                <div ngbDropdown class=\"d-inline-block\">\n                  <button class=\"dropbtn btn btn-default\" id=\"dropdownBasic1\" ngbDropdownToggle>\n                    Toggle dropdown ({{changed()}})\n                    <span class=\"commonglyphs commonglyphs-arrow-down\"></span>\n                  </button>\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownConfig\" class=\"dropdowncontent\" >\n                    <input type=\"text\" placeholder=\"Search...\" id=\"myInput\" [(ngModel)]=\"search\" />\n                    <label class=\"cursor\" style=\"width:100%;\">\n                      <input type=\"checkbox\" (change)=\"selectAll();\" [(ngModel)]=\"selectedAll\">  Select all\n                    </label>\n                    <div class=\"scolldiv\">\n                      <div *ngFor=\"let user of items | FilterPipe: 'name' :search\">\n                        <label style=\"width:100%;\">\n                          <input type=\"checkbox\" (change)=\"checkIfAllSelected()\" [(ngModel)]=\"user.checked\">\n                          <span [innerHTML]=\"user.name | highlight:search\"></span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n  `,\n  styles: [\n    `\n      wk-multiselect .dropbtn {\n        padding: 8px;\n        font-size: 16px;\n        border: none;\n        cursor: pointer;\n        width: 200px;\n        border: 1px solid #ddd;\n        border-bottom: 1px solid #ddd;\n      }\n      wk-multiselect #myInput {\n        background-position: 14px 12px;\n        background-repeat: no-repeat;\n        font-size: 16px;\n        padding: 2px 20px 2px 13px;\n        width: 235px;\n        border: none;\n      }\n      wk-multiselect .dropdown {\n        position: relative;\n      }\n      wk-multiselect .dropdown-toggle::after {\n        float: right;\n        margin: 5px;\n        display:none;\n\n      }\n      wk-multiselect .dropdowncontent {\n        position: absolute;\n        z-index: 1;\n        border-radius: 0 !important;\n        border-bottom: 1px solid #ddd;\n        padding: 0;\n      }\n      wk-multiselect .scolldiv {\n        overflow: auto;\n        max-height: 200px;\n        cursor: pointer;\n      }\n      wk-multiselect .scolldiv p:hover {\n        background-color: #efefef;\n      }\n      wk-multiselect p {\n        padding: 1px 5px;\n        text-decoration: none;\n        display: block;\n        cursor: pointer;\n      }\n      wk-multiselect .cursor {\n        cursor: pointer;\n      }\n      wk-multiselect .dropdowncontent .cursor {\n        border-bottom: 2px solid #ddd;\n        border-top: 2px solid #ddd;\n      }\n      wk-multiselect p {\n        margin-bottom: 0rem;\n      }\n      wk-multiselect label {\n        padding: 2px 5px;\n        cursor: pointer;\n        margin: 0rem;\n      }\n      wk-multiselect label .highlight {\n        font-weight: bold;\n        padding: 0px;\n      }\n      wk-multiselect .searchicon {\n        margin: -1px 8px 0px -24px;\n      }\n      wk-multiselect .dropdowm-menu {\n        padding: 0 !important;\n      }\n      @media screen and (max-width: 768px) {\n        .dropdowm-menu {\n          border-radius: 0;\n        }\n      }\n      ::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 0px rgba(255, 255, 255, 1);\n        border-radius: 3px;\n      }\n      ::-webkit-scrollbar-thumb {\n        border-radius: 3px;\n        -webkit-box-shadow: inset 0 0 3px rgba(255, 255, 255, 1);\n      }\n      .dropdowm-menu {\n        padding: 0 !important;\n      }\n      .left-inner-addon {\n        position: relative;\n      }\n      .left-inner-addon input {\n        padding-left: 30px;\n      }\n      .left-inner-addon i {\n        position: absolute;\n        padding: 10px 12px;\n        pointer-events: none;\n      }\n      .right-inner-addon {\n        position: relative;\n      }\n      .right-inner-addon input {\n        padding-right: 30px;\n      }\n      .right-inner-addon i {\n        position: absolute;\n        right: 0px;\n        padding: 0px 16px;\n        pointer-events: none;\n      }\n      ::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 0px rgba(255, 255, 255, 1);\n        border-radius: 3px;\n      }\n      \n      ::-webkit-scrollbar-thumb {\n        border-radius: 3px;\n        -webkit-box-shadow: inset 0 0 3px rgba(255, 255, 255, 1);\n      }\n      \n      /* width */\n      ::-webkit-scrollbar {\n        width: 10px;\n      }\n      /* Track */\n      ::-webkit-scrollbar-track {\n        box-shadow: inset 0 0 5px grey;\n        border-radius: 10px;\n      }\n      /* Handle */\n      ::-webkit-scrollbar-thumb {\n        background: gray;\n        border-radius: 10px;\n      }\n      /* Handle on hover */\n      ::-webkit-scrollbar-thumb:hover {\n        background: gray;\n      }\n      input[type=\"checkbox\"] {\n        cursor: pointer !important;\n      }\n      ::-webkit-input-placeholder {\n        font-style: italic !important;\n      }\n      :-moz-placeholder {\n        font-style: italic !important;\n      }\n      ::-moz-placeholder {\n        font-style: italic !important;\n      }\n      :-ms-input-placeholder {\n        font-style: italic !important;\n      }    \n    `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class WkMultiselectComponent {\n\n  search: any;\n  count: number;\n  // Multiselect model items\n  @Input() items: Array<WkMultiselectModel> = [];\n  // emit event Multiselect model items when item is selected\n  @Output() selectedItems = new EventEmitter<WkMultiselectModel[]>();\n  selectedAll: any;\n  constructor(config: NgbDropdownConfig) {\n    config.autoClose = false;\n  }\n  selectAll() {\n    // check whether items are checked are not\n    for (let i = 0; i < this.items.length; i++) {\n      this.items[i].checked = this.selectedAll;\n    }\n  }\n  checkIfAllSelected() {\n    // check whether every item is checked are not\n    this.selectedAll = this.items.every(function (item: any) {\n      return item.checked === true;\n    });\n  }\n  changed() {\n    // sets the count to 0\n    this.count = 0;\n    this.items.map(item => {\n      if (item.checked) {\n        this.count = this.count + 1;\n      }\n    });\n    // get the count of selected items\n    // emits event with the checked items\n    this.selectedItems.emit(this.items.filter(x => x.checked === true));\n    return this.count;\n  }\n}\n","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({ name: 'highlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, search): string {\n    // check if search text is passed or not, if passed\n    //replace search text with given regular expression\n    if (search) {\n      var pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n      // split pattern with empty spaces and filter the text with length greater than zero\n      // and join the text with pipe\n      pattern = pattern.split(' ').filter((t) => {\n        return t.length > 0;\n      }).join('|');\n      var regex = new RegExp(pattern, 'gi');\n      // append the match text to label tag\n      return search ? text.replace(regex, (match) => `<label class=\"highlight\">${match}</label>`) : text;\n    }\n    return text;\n  }\n}\n\n@Pipe({\n  name: 'FilterPipe',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[], field: string, value: string): any[] {\n    // check if value is present or not\n    if (value) {\n      // returns empty array if items are empty\n      if (!items) { return []; }\n      var re = new RegExp(value, 'gi');\n      // returns filtered items with regular expression re and searching the text\n      return items.filter(it => it[field].toLowerCase().replace(re, \"<mark>\" + value.toLocaleLowerCase() + \"</mark>\").indexOf(value.toLowerCase()) > -1);\n    }\n    return items;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nfunction _window() : any {\n   // return the global native browser window object\n   return window;\n}\n\n@Injectable()\nexport class WindowRef {\n   get nativeWindow() : any {\n      return _window();\n   }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FilterPipe, HighlightPipe } from './wk-multiselect.pipe';\nimport { WkMultiselectComponent } from './wk-multiselect.component';\nimport { WindowRef } from './WindowRef.provider';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, NgbModule.forRoot()\n  ],\n  declarations: [WkMultiselectComponent, FilterPipe, HighlightPipe],\n  exports: [WkMultiselectComponent]\n})\n\nexport class WkMultiselectModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: WkMultiselectModule,\n      providers: [\n        WindowRef\n      ]\n    };\n  }\n}\n\n"]}